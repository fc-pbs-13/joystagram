# Generated by Django 3.0.7 on 2020-07-12 06:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0003_auto_20200710_1054'),
        ('posts', '0008_auto_20200710_1054'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReCommentLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recomment_likes', to='users.Profile')),
                ('recomment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='posts.ReComment')),
            ],
            options={
                'unique_together': {('owner', 'recomment')},
            },
        ),
        migrations.CreateModel(
            name='PostLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_likes', to='users.Profile')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='posts.Post')),
            ],
            options={
                'unique_together': {('owner', 'post')},
            },
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='posts.Comment')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_likes', to='users.Profile')),
            ],
            options={
                'unique_together': {('owner', 'comment')},
            },
        ),
    ]
